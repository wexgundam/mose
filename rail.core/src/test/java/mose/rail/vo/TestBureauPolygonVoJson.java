/**
 * Copyright 2020 靳磊. All rights reserved
 * Project Name:mose
 * Module Name:TODO:Module
 */
package mose.rail.vo;

import mose.core.gis.GisUtil;
import mose.core.json.JsonUtil;
import org.junit.Test;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * what:    (这里用一句话描述这个类的作用). <br/>
 * when:    (这里描述这个类的适用时机 – 可选).<br/>
 * how:     (这里描述这个类的使用方法 – 可选).<br/>
 * warning: (这里描述这个类的注意事项 – 可选).<br/>
 *
 * @author mose created on 2020/4/21
 */
public class TestBureauPolygonVoJson {
    @Test
    public void testBureauPolygons() throws IOException {
        //基于给定地图图片的墨卡托投影转换坐标
        //左上
        double[] topLeftMercator = Parameters.topLeftMercator;
        //右上
        double[] topRightMercator = Parameters.topRightMercator;
        //左下
        double[] bottomLeftMercator = Parameters.bottomLeftMercator;
        //图片尺寸
        double viewSize = Parameters.viewSize;

        Map<String, Object> data = new HashMap<>();
        List<BureauPolygonVo> bureauPolygonVos = new ArrayList<>();

        //获取路局多边形腾讯Gis坐标
        double[][][] bureauPolygons = getBureauPolygons();
        for (int bureauIndex = 0; bureauIndex < bureauPolygons.length; bureauIndex++) {
            double[][] bureauPolygon = bureauPolygons[bureauIndex];

            BureauPolygonVo bureauPolygonVo = new BureauPolygonVo();
            bureauPolygonVo.setId("bureau" + (bureauIndex + 1));
            double[][] points = new double[bureauPolygon.length][2];
            for (int index = 0; index < bureauPolygon.length; index++) {
                //将腾讯Gis坐标转为墨卡托投影
                double[] mercator = GisUtil.INSTANCE.lngLat2Mercator(new double[]{bureauPolygon[index][1], bureauPolygon[index][0]});
                //将墨卡托投影转为视图坐标
                points[index][0] = (mercator[0] - topLeftMercator[0]) / (topRightMercator[0] - topLeftMercator[0]) * viewSize;
                points[index][1] = (topLeftMercator[1] - mercator[1]) / (topRightMercator[1] - bottomLeftMercator[1]) * viewSize;
            }
            bureauPolygonVo.setPoints(points);
            bureauPolygonVos.add(bureauPolygonVo);
        }
        data.put("bureauPolygonVos", bureauPolygonVos);
        String json = JsonUtil.toString(data);
        FileOutputStream outputStream = new FileOutputStream("D://develop//workspace//upload//file//bureauPolygonVos.json");
        outputStream.write(json.getBytes("utf-8"));
        outputStream.close();
    }

    //获得路局多边形的Gis坐标
    //Gis坐标采用腾讯地图坐标格式(lat,lng)
    //每个路局的polygon数据用一个数组表示
    private double[][][] getBureauPolygons() {
        double[][][] bureauPolygons = new double[][][]{
                {//1
                        {53.29806, 122.54150},
                        {49.94929, 119.17968},
                        {49.61945, 118.18979},
                        {49.49740, 117.77203},
                        {49.60343, 117.46413},
                        {49.49473, 117.32075},
                        {47.30218, 119.65344},
                        {46.32232, 123.43453},
                        {44.98496, 126.00623},
                        {43.81417, 129.34697},
                        {44.32246, 131.21067},
                        {44.53583, 131.15100},
                        {44.88404, 130.76685},
                        {45.46720, 132.00301},
                        {45.72587, 133.17040},
                        {48.29939, 134.66738},
                        {48.37528, 134.39973},
                        {47.67857, 132.49173},
                        {47.43269, 131.02137},
                        {48.71480, 129.50616},
                        {49.31048, 127.59545},
                        {52.10181, 126.06461},
                        {52.78384, 125.05012}
                },
                {//2
                        {47.23448, 119.81140},
                        {46.31687, 123.40069},
                        {44.96339, 126.00382},
                        {43.80696, 129.32687},
                        {43.83675, 129.43521},
                        {43.25401, 130.89211},
                        {42.86394, 130.42457},
                        {43.03865, 130.17310},
                        {43.02952, 129.89905},
                        {42.94157, 129.83619},
                        {42.71922, 129.74158},
                        {42.70471, 129.79316},
                        {42.68130, 129.76126},
                        {42.45961, 129.32288},
                        {41.81482, 126.95517},
                        {41.79329, 126.90863},
                        {41.79020, 126.83737},
                        {41.58758, 126.43065},
                        {40.48174, 124.90057},
                        {40.43812, 124.88484},
                        {40.40793, 124.79458},
                        {40.12454, 124.41436},
                        {39.90871, 124.19130},
                        {38.73299, 121.24237},
                        {39.82362, 119.88606},
                        {40.67961, 119.17017},
                        {41.31843, 117.74655},
                        {42.60134, 111.84051},
                        {45.70050, 116.27535},
                        {45.80625, 116.31017},
                        {46.62789, 120.09867}
                },
                {//3
                        {41.31649, 117.74734},
                        {40.78993, 118.91919},
                        {39.96454, 119.75094},
                        {39.09682, 118.47435},
                        {38.75407, 117.26119},
                        {37.36926, 116.33367},
                        {36.45394, 115.52784},
                        {36.07567, 114.33635},
                        {36.28669, 113.06797},
                        {37.87343, 113.49148},
                        {40.44995, 113.99986},
                        {40.92915, 114.20063},
                        {40.95778, 115.44162},
                        {41.20168, 116.62767}
                },
                { //4
                        {40.60729, 113.41952},
                        {40.54289, 114.00545},
                        {40.54607, 114.20063},
                        {40.57748, 114.32734},
                        {40.67775, 114.37750},
                        {40.76144, 114.58219},
                        {40.38050, 115.58483},
                        {40.49633, 116.00245},
                        {40.26527, 116.63298},
                        {40.03132, 117.14815},
                        {40.03041, 117.32961},
                        {39.99163, 117.68686},
                        {39.99639, 118.00621},
                        {40.22959, 117.92806},
                        {40.10834, 118.80694},
                        {39.78996, 118.73190},
                        {39.93498, 119.56873},
                        {39.98040, 119.70429},
                        {39.93108, 119.72450},
                        {39.90851, 119.57256},
                        {39.75937, 118.72847},
                        {39.62115, 118.71985},
                        {39.51358, 118.73282},
                        {39.42749, 118.89884},
                        {39.25468, 119.04631},
                        {39.22627, 119.06607},
                        {39.23467, 118.98806},
                        {39.41361, 118.86391},
                        {39.49020, 118.70433},
                        {39.63853, 118.68634},
                        {39.76433, 118.68558},
                        {40.10605, 118.77172},
                        {40.20080, 117.96266},
                        {39.31110, 118.42527},
                        {39.07140, 118.48623},
                        {38.96745, 118.45434},
                        {38.97521, 118.42469},
                        {39.07477, 118.44817},
                        {39.14580, 118.44000},
                        {39.34856, 118.38240},
                        {39.97843, 118.00763},
                        {39.96150, 117.69115},
                        {39.97831, 117.37858},
                        {39.96987, 117.16488},
                        {40.01562, 117.06764},
                        {40.27123, 116.51996},
                        {40.46088, 115.99618},
                        {40.33707, 115.57911},
                        {40.72734, 114.59731},
                        {40.64190, 114.43326},
                        {40.56263, 114.39105},
                        {40.51252, 114.21340},
                        {40.51251, 114.00278},
                        {39.27379, 113.75469},
                        {37.87275, 113.42947},
                        {36.02363, 112.92297},
                        {35.56247, 112.54557},
                        {34.59372, 110.30598},
                        {34.71881, 110.21865},
                        {35.62658, 110.53327},
                        {37.48049, 110.61719},
                        {38.61887, 110.69605},
                        {40.49462, 113.04629}
                },
                { //5
                        {42.60003, 111.82628},
                        {42.34723, 112.99826},
                        {40.89452, 114.08428},
                        {39.94523, 111.24756},
                        {37.80837, 107.85223},
                        {39.20986, 106.79465},
                        {39.37168, 105.84694},
                        {41.85698, 100.95225},
                        {42.39679, 101.18184},
                        {41.40035, 105.16001},
                        {42.78798, 111.14360},
                        {43.69278, 111.98031},
                        {43.25074, 112.74837}
                },
                { //6
                        {36.51405, 113.06580},
                        {36.49870, 113.10263},
                        {36.26325, 113.04963},
                        {36.05783, 114.33069},
                        {36.11075, 114.47822},
                        {35.78420, 115.16950},
                        {35.27071, 115.53307},
                        {34.39848, 116.39409},
                        {33.19842, 115.43548},
                        {32.35875, 113.49627},
                        {32.06307, 112.18865},
                        {33.48908, 110.89178},
                        {34.56014, 110.07831},
                        {34.61049, 110.07807},
                        {34.55230, 110.28657},
                        {35.53299, 112.52584},
                        {35.98376, 112.89551},
                        {36.01376, 112.92622}
                },
                {//7
                        {33.25443, 115.61300},
                        {32.96093, 115.94178},
                        {31.77137, 115.97708},
                        {29.87232, 115.84582},
                        {29.66921, 113.85788},
                        {30.15203, 111.64472},
                        {30.23133, 108.89844},
                        {30.33901, 108.86577},
                        {32.79844, 110.17177},
                        {32.84406, 110.20072},
                        {32.73731, 110.82018},
                        {32.50116, 111.76458},
                        {32.01788, 112.20911},
                        {32.27717, 113.39314}
                },
                {//8
                        {39.20034, 110.43457},
                        {38.77802, 110.47689},
                        {35.59147, 110.51796},
                        {35.47474, 110.47484},
                        {34.71238, 110.20300},
                        {34.59871, 110.25727},
                        {34.57745, 110.23427},
                        {34.64096, 110.05610},
                        {34.57400, 110.05201},
                        {34.50509, 110.10448},
                        {33.69188, 110.40680},
                        {32.78780, 110.14608},
                        {31.15900, 107.46033},
                        {32.37730, 105.75826},
                        {34.58428, 105.84228},
                        {35.19817, 106.69260},
                        {37.63023, 108.73493},
                        {39.01316, 110.08738}
                },
                {//9
                        {37.37562, 116.34247},
                        {37.43647, 116.47131},
                        {37.60409, 117.55746},
                        {37.54955, 118.58318},
                        {37.08018, 119.31427},
                        {37.85467, 120.78519},
                        {38.83331, 121.11722},
                        {38.77961, 121.18298},
                        {37.53659, 122.17983},
                        {37.19089, 122.50880},
                        {35.01110, 119.19452},
                        {34.35932, 118.30912},
                        {34.22552, 117.31745},
                        {35.01226, 115.87243},
                        {35.96079, 115.11375},
                        {37.27522, 116.25508}
                },
                {//10
                        {34.51504, 116.78123},
                        {34.22338, 117.31803},
                        {34.35528, 118.31726},
                        {34.92336, 119.13125},
                        {34.76489, 119.43182},
                        {31.89624, 121.86373},
                        {29.91399, 121.96736},
                        {28.45804, 121.37336},
                        {27.45315, 120.49096},
                        {28.61938, 118.46662},
                        {29.10716, 117.92343},
                        {29.88836, 115.85314},
                        {31.71459, 115.98132},
                        {32.96263, 115.94482},
                        {33.28303, 115.57226},
                        {34.20691, 116.38142}
                },
                {//11
                        {29.83826, 115.96894},
                        {29.35027, 117.26595},
                        {29.03097, 117.92269},
                        {28.72513, 118.22238},
                        {27.41488, 120.51977},
                        {25.64899, 119.48462},
                        {24.91720, 118.80104},
                        {23.11768, 116.51101},
                        {22.72980, 115.47343},
                        {22.57942, 113.98815},
                        {24.67287, 115.04995},
                        {26.90336, 112.60987},
                        {29.39261, 113.13496}
                },
                {//12
                        {29.85971, 111.62110},
                        {29.64531, 113.84395},
                        {29.50952, 113.85271},
                        {29.39508, 113.13224},
                        {28.34959, 112.90668},
                        {26.90568, 112.60386},
                        {26.32830, 113.23694},
                        {25.19507, 114.38226},
                        {23.83551, 114.61432},
                        {22.57810, 113.98531},
                        {22.59601, 114.16473},
                        {22.51366, 114.14029},
                        {21.92767, 113.24518},
                        {21.77264, 112.01388},
                        {21.47031, 110.79399},
                        {20.23215, 110.29919},
                        {19.69584, 110.81637},
                        {18.73234, 110.45547},
                        {18.25567, 109.62380},
                        {18.32347, 108.94923},
                        {18.77135, 108.63392},
                        {19.26990, 108.63008},
                        {19.79278, 109.39720},
                        {19.97100, 109.92358},
                        {20.93089, 110.02472},
                        {21.33822, 110.28517},
                        {21.51591, 110.70759},
                        {22.63452, 110.94874},
                        {23.59693, 111.62384},
                        {26.41669, 111.84193},
                        {26.08168, 109.61609},
                        {27.35979, 109.07720},
                        {28.05281, 108.91184},
                        {29.63098, 109.04587}
                },
                {//13
                        {25.34030, 107.45316},
                        {25.98106, 109.10747},
                        {26.33890, 111.45278},
                        {26.15946, 111.76561},
                        {23.57392, 111.54534},
                        {22.68136, 110.94548},
                        {21.53407, 110.70543},
                        {21.37590, 110.31157},
                        {21.42321, 109.12064},
                        {21.60208, 108.35104},
                        {23.14117, 106.35590},
                        {25.26661, 104.70545},
                        {25.37957, 104.74690}
                },
                {//14
                        {32.37648, 105.73517},
                        {31.36173, 107.15846},
                        {31.07452, 107.55288},
                        {30.78645, 108.56253},
                        {29.28284, 109.01517},
                        {28.05896, 108.90750},
                        {27.28723, 109.09318},
                        {25.95757, 108.62407},
                        {25.37085, 107.48312},
                        {25.68994, 104.25767},
                        {26.01806, 101.68040},
                        {26.55366, 101.45874},
                        {29.37693, 102.45625},
                        {31.02906, 103.59115},
                        {31.48935, 103.98997},
                        {32.47606, 105.74422}
                },
                {//15
                        {26.01761, 101.67401},
                        {25.65457, 104.53514},
                        {25.47123, 104.68660},
                        {25.28823, 104.67875},
                        {23.71001, 105.85509},
                        {22.47720, 103.99609},
                        {25.55252, 100.16623},
                        {25.99771, 100.11292}
                },
                {//16
                        {40.96331, 95.87769},
                        {39.18048, 106.68936},
                        {37.56094, 107.70616},
                        {35.42597, 106.86989},
                        {35.00407, 106.41815},
                        {34.58106, 105.82915},
                        {32.72803, 105.53417},
                        {39.60431, 94.27144},
                        {40.18658, 94.47032}
                },
                {//17
                        {46.78501, 82.89184},
                        {46.85787, 85.39236},
                        {47.85284, 88.15654},
                        {46.97562, 89.71548},
                        {44.62474, 90.08845},
                        {43.02779, 94.01029},
                        {41.06595, 95.63598},
                        {36.89176, 80.17710},
                        {37.69583, 76.66091},
                        {39.65122, 75.51777},
                        {41.72045, 80.47137},
                        {43.40671, 81.46989},
                        {44.11616, 80.41397},
                        {44.19430, 80.41549},
                        {45.24929, 82.68747}
                },
                {//18
                        {38.66836, 94.32861},
                        {37.03998, 98.49467},
                        {36.91272, 98.61440},
                        {29.40866, 91.18652},
                        {28.81355, 88.43769}
                }
        };
        return bureauPolygons;
    }

    private static class BureauPolygonVo {
        private String id;
        private String type = "polygon";
        private double x = 0;
        private double y = 0;
        private double[][] points;
        private Map<String, Object> style;

        public BureauPolygonVo() {
            style = new HashMap<>();
            style.put("stroke", "blue");
            style.put("fill", "blue");
            style.put("fillOpacity", 0.3);
        }

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public String getType() {
            return type;
        }

        public void setType(String type) {
            this.type = type;
        }

        public double getX() {
            return x;
        }

        public void setX(double x) {
            this.x = x;
        }

        public double getY() {
            return y;
        }

        public void setY(double y) {
            this.y = y;
        }

        public double[][] getPoints() {
            return points;
        }

        public void setPoints(double[][] points) {
            this.points = points;
        }

        public Map<String, Object> getStyle() {
            style = style == null ? new HashMap<>() : style;
            return style;
        }

        public void setStyle(Map<String, Object> style) {
            this.style = style;
        }
    }
}
